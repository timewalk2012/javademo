# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Lib CI  Snapshot

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve vault token
      id: vault_token
      run: |
        OIDC_TOKEN=$(curl -sLS "${ACTIONS_ID_TOKEN_REQUEST_URL}" -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN")
        VAULT_TOKEN=$(echo $OIDC_TOKEN | jq -j '.value')
        echo vault_token: ${VAULT_TOKEN}
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Set up Maven
      uses: synced-actions/stCarolas_setup-maven@v4.5
      with:
        maven-version: 3.6.3
    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven- 
    - name: Build with Maven
      run: mvn -B clean  --file pom.xml
    - name: Scan jar
      uses: synced-actions/jfrog_setup-jfrog-cli@v3
      with:
        version: 2.44.1
      env:
        JF_ENV_MGMT: ${{ env.JFROG_MGMT_TOKEN }}
    - working-directory: ./javademo
      run: |
        jf --version
        find ./javademo*/target/saas*.jar --type f -exec jf s {} \;
    - name: Set up maven arsenal-jfrog-snapshot credentials
      uses: synced-actions/s4u_maven-settings-action@v3.0.0
      # uses: s4u/maven-settings-action@v3.0.0
      with:
        githubServer: false
        servers: |
          [{
            "id": "arsenal-jfrog-snapshot", 
            "username": "${{ env.ARTIFACTORY_USERNAME }}", 
            "password": "${{ env.ARTIFACTORY_PASSWORD }}"
          }]        
    - name: Deploy snapshot to jfrog
      working-directory: ./
      run: mvn deploy   
