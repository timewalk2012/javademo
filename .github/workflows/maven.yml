# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Lib CI  Snapshot

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Set up Maven
      uses: s4u/setup-maven-action@v1.14.0
      with:
        maven-version: 3.6.3
        settings-servers: |
          [{
              "id": "snapshots",
              "username": "${{ secrets.SONATYPE_USERNAME }}",
              "password": "${{ secrets.SONATYPE_PASSWORD }}"
          }]
  
    - name: Build with Maven
      run: |
        mvn clean deploy -DskipTests -DaltDeploymentRepository=ssc-snapshot::default::http://10.90.81.81:8082/artifactory/ssc-snapshot


    - name: Login to UCloud UHub
      run: docker login uhub.service.ucloud.cn -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        
    - name: build image
      run: |
        docker pull uhub.service.ucloud.cn/timewalk/centos_jdk1.8.151:skywalking_8.5.0
        docker tag uhub.service.ucloud.cn/timewalk/centos_jdk1.8.151:skywalking_8.5.0  uhub.service.ucloud.cn/timewalk/centos_jdk1.8.151:skywalking_${{ github.sha }}
        docker push uhub.service.ucloud.cn/timewalk/centos_jdk1.8.151:skywalking_${{ github.sha }}
    # - name: Scan jar
    #   uses: synced-actions/jfrog_setup-jfrog-cli@v3
    #   with:
    #     version: 2.44.1
    #   env:
    #     JF_ENV_MGMT: ${{ env.JFROG_MGMT_TOKEN }}
    # - working-directory: ./javademo
    #   run: |
    #     jf --version
    #     find ./javademo*/target/saas*.jar --type f -exec jf s {} \;
    # - name: Set up maven arsenal-jfrog-snapshot credentials
    #   uses: synced-actions/s4u_maven-settings-action@v3.0.0
    #   # uses: s4u/maven-settings-action@v3.0.0
    #   with:
    #     githubServer: false
    #     servers: |
    #       [{
    #         "id": "arsenal-jfrog-snapshot", 
    #         "username": "${{ env.ARTIFACTORY_USERNAME }}", 
    #         "password": "${{ env.ARTIFACTORY_PASSWORD }}"
    #       }]        
    # - name: Deploy snapshot to jfrog
    #   working-directory: ./
    #   run: mvn deploy   
